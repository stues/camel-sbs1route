<?xml version="1.0" encoding="UTF-8"?>
<!-- Configures the Camel Context -->

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:camel="http://camel.apache.org/schema/spring"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
       http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd
       http://www.springframework.org/schema/util  http://www.springframework.org/schema/util/spring-util.xsd">

	<context:annotation-config />

	<bean
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations" value="classpath*:sbs1route-config.properties" />
		<property name="properties">
			<props>
				<prop key="localaddress"><!-- The local IP-Address -->
				</prop>

				<prop key="sos.enabled">true</prop>
				<prop key="sos.host">${localaddress}</prop>
				<prop key="sos.port">8080</prop>
				<prop key="sos.path">/52n-sos-webapp/sos/pox</prop>

				<prop key="websocket.enabled">true</prop>
				<prop key="websocket.host">${localaddress}</prop>
				<prop key="websocket.port">8443</prop>
				<prop key="websocket.path">/clientTrackData</prop>

				<prop key="sbs1.enabled">true</prop>
				<prop key="sbs1.host"><!-- The SBS1 Station IP -->
				</prop>
				<prop key="sbs1.port">30003</prop>

				<prop key="generator.enabled">false</prop>
				<prop key="generator.amountOfTracks">20</prop>
				<prop key="generator.updateInterval">200</prop>
				<prop key="aggregator.cleanupInterval">30000</prop>
			</props>
		</property>
		<property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE" />
	</bean>

	<import resource="sos-context.xml" />
	<import resource="sbs1-source-context.xml" />

	<bean id="websocketStore"
		class="org.apache.camel.component.websocket.MemoryWebsocketStore" />

	<bean name="filterWebsocketProcessor"
		class="ch.trackdata.sbs1route.websocket.FilterWebsocketProcessor">
		<property name="websocketStore" ref="websocketStore" />
	</bean>

	<bean id="randomTrackGenerator" class="ch.trackdata.sbs1route.generator.RandomTrackGenerator">
		<property name="producerTemplate" ref="generatedTrackProducer" />
		<property name="enabled" value="${generator.enabled}" />
		<property name="amountOfTracks" value="${generator.amountOfTracks}" />
		<property name="updateInterval" value="${generator.updateInterval}" />
		<property name="minLatitude" value="44" />
		<property name="maxLatitude" value="49" />
		<property name="minLongitude" value="4.5" />
		<property name="maxLongitude" value="14" />
		<property name="maxAltitudeDelta" value="40" />
		<property name="maxSpeedDelta" value="40" />
		<property name="maxHeadingDelta" value="40" />
	</bean>


	<camel:camelContext id="sbs1RouteCamelContext"
		xmlns="http://camel.apache.org/schema/spring">

		<propertyPlaceholder id="properties"
			location="sbs1route-config.properties" />

		<camel:template id="sbs1Producer" defaultEndpoint="direct:sbs1" />

		<camel:template id="generatedTrackProducer"	defaultEndpoint="direct:trackgeneration" />

		<!-- Websocket Endpoint -->
		<camel:endpoint id="websocketClientJSONEndpoint"
			uri="filterwebsocket://${websocket.host}:${websocket.port}${websocket.path}?websocketStore=#websocketStore&amp;sendToAll=true" />


		<!-- Sensor Observation Service Endpoint -->
		<camel:endpoint id="sosEndpoint"
			uri="http://${sos.host}:${sos.port}${sos.path}" />

		<camel:route autoStartup="true">
			<camel:from uri="websocketClientJSONEndpoint" />
			<convertBodyTo type="ch.trackdata.sbs1route.message.GeoJSONFeature" />
			<camel:process ref="filterWebsocketProcessor"></camel:process>
			<log message="Converted: ${body}" />
			<camel:stop />
		</camel:route>

		<!-- <camel:route autoStartup="true"> <camel:from uri="file://src/main/resources?noop=true&amp;fileName=sample_data.json" 
			/> <loop> <constant>99999</constant> <split streaming="true"> <tokenize token="\n" 
			/> <delay asyncDelayed="true"> <constant>1000</constant> </delay> <convertBodyTo 
			type="ch.trackdata.sbs1route.message.GeoJSONFeature" /> <multicast stopOnException="false"> 
			<camel:to ref="websocketClientJSONEndpoint" /> <to uri="direct:sbs1sos" /> </multicast> 
			<camel:stop /> </split> </loop> </camel:route> -->

		<camel:route>
			<camel:from uri="direct:trackgeneration" />
			<camel:multicast stopOnException="false">
				<camel:when>
					<simple>${properties:websocket.enabled}</simple>
					<camel:to ref="websocketClientJSONEndpoint" />
				</camel:when>
				<camel:otherwise>
					<camel:stop />
				</camel:otherwise>
				
				<camel:to uri="direct:sos" />
			</camel:multicast>
		</camel:route>


		<camel:route autoStartup="true">
			<camel:from uri="direct:sbs1" />
			<camel:unmarshal ref="bindyDataformat" />
			<camel:log message="Converted: ${body}" />
			<camel:process ref="sbs1Processor" />
			<camel:multicast stopOnException="false">
				<camel:to uri="direct:sbs1websocket" />
				<camel:to uri="direct:sbs1sos" />
			</camel:multicast>
			<camel:stop />
		</camel:route>

		<camel:route>
			<camel:from uri="direct:sbs1websocket" />
			<convertBodyTo type="ch.trackdata.sbs1route.message.GeoJSONFeature" />
			<!-- <process ref="sbs1DataAggregatorProcessor" />-->
			<camel:to uri="direct:websocket" />
		</camel:route>

		<camel:route>
			<camel:from uri="direct:websocket" />
			<camel:when>
				<simple>${properties:websocket.enabled}</simple>
				<camel:to ref="websocketClientJSONEndpoint" />
			</camel:when>
			<camel:otherwise>
				<camel:stop />
			</camel:otherwise>
		</camel:route>

		<camel:route>
			<camel:from uri="direct:sbs1sos" />
			<convertBodyTo type="ch.trackdata.sbs1route.message.Feature" />
			<camel:to uri="direct:sos" />
		</camel:route>

		<camel:route>
			<camel:from uri="direct:sos" />
			<camel:choice>
				<camel:when>
					<simple>${properties:sos.enabled}</simple>
					<convertBodyTo type="javax.xml.bind.JAXBElement" />
					<marshal>
						<jaxb id="myJaxb" prettyPrint="false"
							contextPath="net.opengis.sos.v_2_0_0:net.opengis.swe.v_2_0_0:net.opengis.filter.v_2_0_0" />
					</marshal>
					<setHeader headerName="CamelHttpMethod">
						<constant>POST</constant>
					</setHeader>
					<setHeader headerName="Content-Type">
						<simple>application/xml</simple>
					</setHeader>
					<log message="${body}" logName="SOS_INSERTOBSERVATION" />
					<to uri="sosEndpoint" />
				</camel:when>
				<camel:otherwise>
					<camel:stop />
				</camel:otherwise>
			</camel:choice>
		</camel:route>

	</camel:camelContext>

</beans>
