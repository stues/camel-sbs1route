<?xml version="1.0" encoding="UTF-8"?>
<!-- Configures the Camel Context -->

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:camel="http://camel.apache.org/schema/spring"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
       http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd">

	<context:annotation-config />

	<bean
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations" value="classpath*:sbs1route-config.properties" />
		<property name="properties">
			<props>
				<prop key="scanner.host"><!-- The SBS1 Station IP -->
				</prop>
				<prop key="scanner.port">30003</prop>
				<prop key="localadress"><!-- The local IP-Address -->
				</prop>
				<prop key="aggregator.cleanupInterval">30000</prop>
			</props>
		</property>
		<property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE" />
	</bean>


	<bean id="sbs1Parser" class="ch.trackdata.sbs1route.SBS1Parser" />

	<bean id="bindyDataformat"
		class="org.apache.camel.dataformat.bindy.csv.BindyCsvDataFormat">
		<constructor-arg value="ch.trackdata.sbs1route.message" />
	</bean>

	<bean id="scanner" class="ch.trackdata.sbs1route.TrafficScanner">
		<property name="host" value="${scanner.host}" />
		<property name="port" value="${scanner.port}" />
		<property name="SBS1Parser" ref="sbs1Parser" />
	</bean>

	<bean id="sbs1Processor" class="ch.trackdata.sbs1route.SBS1Processor" />
	<bean id="geoJSONProcessor" class="ch.trackdata.sbs1route.GeoJSONProcessor" />
	<bean id="sbs1DataAggregatorProcessor" class="ch.trackdata.sbs1route.SBS1DataAggregatorProcessor">
		<property name="cleanupInterval" value="${aggregator.cleanupInterval}" />
	</bean>

	<bean id="camelStartupListener" class="ch.trackdata.sbs1route.CamelStartupListener">
		<property name="camelContext" ref="sbs1RouteCamelContext" />
		<property name="trafficScanner" ref="scanner" />
	</bean>

	<camel:camelContext id="sbs1RouteCamelContext"
		xmlns="http://camel.apache.org/schema/spring">
				
		<camel:endpoint id="websocketJSONEndpoint"
			uri="websocket://${localadress}:8443/traffic?sendToAll=true&amp;staticResources=classpath:webapp" />
		
		<camel:endpoint id="sosEndpoint"
			uri="http://${localadress}:8080/52n-sos-webapp/sos/pox" />
				
		<camel:route autoStartup="true">

			<camel:from uri="direct:sbs1" />
			<unmarshal ref="bindyDataformat" />
			<log message="Converted: ${body}" />
			<process ref="sbs1Processor" />
			<process ref="sbs1DataAggregatorProcessor" />
			<!-- <convertBodyTo type="ch.trackdata.sbs1route.message.GeoJSONFeature" />  -->
			<multicast stopOnException="false">
					<to uri="direct:websocket"/>
					<to uri="direct:sos"/>	
			</multicast>
			<to uri="mock:result"/>
			<!-- </camel:when> </camel:choice> -->
		</camel:route>

		<camel:route>
			<camel:from uri="direct:websocket" />
			<process ref="geoJSONProcessor" />
			<camel:to ref="websocketJSONEndpoint" />
		</camel:route>

		<camel:route>
			<camel:from uri="direct:sos" />
			<convertBodyTo type="javax.xml.bind.JAXBElement" />
			<marshal>
				<jaxb id="myJaxb" prettyPrint="false" contextPath="net.opengis.sos.v_2_0_0:net.opengis.swe.v_2_0_0:net.opengis.filter.v_2_0_0"/>
			</marshal>
			<setHeader headerName="CamelHttpMethod">
  				<constant>POST</constant>
			</setHeader>
			<setHeader headerName="Content-Type">
    			<simple>application/xml</simple>
			</setHeader>
			<to uri="sosEndpoint" />
		</camel:route>


	</camel:camelContext>

</beans>
