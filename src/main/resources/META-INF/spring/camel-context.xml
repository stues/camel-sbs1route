<?xml version="1.0" encoding="UTF-8"?>
<!-- Configures the Camel Context -->

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:camel="http://camel.apache.org/schema/spring"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
       http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd
       http://www.springframework.org/schema/util  http://www.springframework.org/schema/util/spring-util.xsd">

	<context:annotation-config />
	
	<!-- <import resource="sos-context.xml" />  -->
	<!-- <import resource="sbs1-source-context.xml" />  -->

	<bean id="websocketStore" class="org.apache.camel.component.websocket.MemoryWebsocketStore" />

	<bean name="websocketProcessor" class="ch.trackdata.sbs1route.websocket.WebsocketProcessor">
		<property name="websocketStore" ref="websocketStore" />
	</bean>

	<camel:camelContext id="sbs1RouteCamelContext"
		xmlns="http://camel.apache.org/schema/spring">
			
		<!-- Websocket Endpoint -->
		<camel:endpoint id="websocketJSONEndpoint"
			uri="websocket://${localadress}:8443/traffic?sendToAll=true" />

		<camel:endpoint id="websocketClientJSONEndpoint"
			uri="filterwebsocket://${localadress}:8443/clientTrackData?websocketStore=#websocketStore&amp;sendToAll=true" />


		<!-- Sensor Observation Service Endpoint -->
		<camel:endpoint id="sosEndpoint"
			uri="http://${localadress}:8080/52n-sos-webapp/sos/pox" />

		<camel:route autoStartup="true">
			<camel:from uri="websocketClientJSONEndpoint" />
			<camel:process ref="websocketProcessor"></camel:process>
			<log message="Converted: ${body}" />
			
			<camel:to uri="websocketClientJSONEndpoint" />
		</camel:route>

		<camel:route autoStartup="true">
			<camel:from
				uri="file://src/main/resources?noop=true&amp;fileName=sample_data.json" />
			<loop>
				<constant>99999</constant>
				<split streaming="true">
					<tokenize token="\n" />
					<delay asyncDelayed="true">
						<constant>1000</constant>
					</delay>
					<multicast stopOnException="false">
						<camel:to ref="websocketClientJSONEndpoint" />
						<!-- <to uri="direct:sos" />  -->
					</multicast>
					<to uri="mock:result" />
				</split>
			</loop>
		</camel:route>


		<!-- <camel:route autoStartup="false">
			<camel:from uri="direct:sbs1" />
			<unmarshal ref="bindyDataformat" />
			<log message="Converted: ${body}" />
			<process ref="sbs1Processor" />
			<multicast stopOnException="false">
				<to uri="direct:websocket" />
				<to uri="direct:sos" />
			</multicast>
			<to uri="mock:result" />
		</camel:route>

		<camel:route>
			<camel:from uri="direct:websocket" />
			<process ref="sbs1DataAggregatorProcessor" />
			<process ref="geoJSONProcessor" />
			<log message="${body}" logName="JSON" />
			<camel:to ref="websocketJSONEndpoint" />
		</camel:route>

		<camel:route>
			<camel:from uri="direct:sos" />
			<convertBodyTo type="ch.trackdata.sbs1route.message.GeoJSONFeature" />
			<convertBodyTo type="javax.xml.bind.JAXBElement" />
			<marshal>
				<jaxb id="myJaxb" prettyPrint="false"
					contextPath="net.opengis.sos.v_2_0_0:net.opengis.swe.v_2_0_0:net.opengis.filter.v_2_0_0" />
			</marshal>
			<setHeader headerName="CamelHttpMethod">
				<constant>POST</constant>
			</setHeader>
			<setHeader headerName="Content-Type">
				<simple>application/xml</simple>
			</setHeader>
			<log message="${body}" logName="SOS_INSERTOBSERVATION" />
			<to uri="sosEndpoint" />
		</camel:route>-->


	</camel:camelContext>

</beans>
